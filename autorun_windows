# Full setup script for DiskMonitor autorun with:
# - Daily 05:00 run
# - Startup run if 05:00 run did not happen

# Load filelocation from config.json
$configPath = "C:\config.json"
if (-not (Test-Path $configPath)) {
    Write-Host "Config file not found: $configPath"
    exit 1
}

try {
    $config = Get-Content $configPath | ConvertFrom-Json
} catch {
    Write-Host "Failed to parse config.json"
    exit 1
}

$diskmonScript = $config.filelocation
if ([string]::IsNullOrEmpty($diskmonScript)) {
    Write-Host "'filelocation' not set in config.json"
    exit 1
}

$pythonExe = (Get-Command python).Source
if (-not $pythonExe) {
    Write-Host "Python not found in PATH."
    exit 1
}

$markerFile = "C:\diskmon_last_run.txt"

# Paths for wrapper scripts
$dailyWrapper = "C:\diskmon_run.ps1"
$startupWrapper = "C:\diskmon_startup.ps1"

# Create the daily run wrapper script
@"
python `"$diskmonScript`"

if (\$LASTEXITCODE -eq 0) {
    Set-Content -Path `"$markerFile`" -Value (Get-Date -Format yyyy-MM-dd)
}
"@ | Set-Content -Path $dailyWrapper -Encoding UTF8

# Create the startup wrapper script
@"
\$markerPath = `"$markerFile`"
\$today = Get-Date -Format yyyy-MM-dd

if (Test-Path \$markerPath) {
    \$lastRun = Get-Content \$markerPath
    if (\$lastRun -eq \$today) {
        exit 0
    }
}

python `"$diskmonScript`"

if (\$LASTEXITCODE -eq 0) {
    Set-Content -Path \$markerPath -Value \$today
}
"@ | Set-Content -Path $startupWrapper -Encoding UTF8

# Task names
$taskNameDaily = "DiskMonitorDaily"
$taskNameStartup = "DiskMonitorStartup"

# Remove existing tasks if present
schtasks /Delete /TN $taskNameDaily /F 2>$null
schtasks /Delete /TN $taskNameStartup /F 2>$null

# Create daily task at 05:00
schtasks /Create /TN $taskNameDaily /TR "powershell -NoProfile -ExecutionPolicy Bypass -File `"$dailyWrapper`"" /SC DAILY /ST 05:00 /RL HIGHEST /F

if ($LASTEXITCODE -eq 0) {
    Write-Host "Scheduled task '$taskNameDaily' created to run daily at 05:00."
} else {
    Write-Host "Failed to create scheduled task '$taskNameDaily'."
}

# Create startup task
schtasks /Create /TN $taskNameStartup /TR "powershell -NoProfile -ExecutionPolicy Bypass -File `"$startupWrapper`"" /SC ONSTART /RL HIGHEST /F

if ($LASTEXITCODE -eq 0) {
    Write-Host "Scheduled task '$taskNameStartup' created to run at system startup."
} else {
    Write-Host "Failed to create scheduled task '$taskNameStartup'."
}
